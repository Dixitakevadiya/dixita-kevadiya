<div class="grid_wrapper">
    <div class="container">
        {% if section.settings.title != blank %}
        <h2 class="title">{{ section.settings.title }}</h2>
        {% endif %}
        <div class="grid_main_list">
            {% assign product_list  = section.settings.product %}
            {% for product in product_list %}
            <div class="grid_inner">
                <img src="{{ product.featured_image.src | img_url: 'master' }}" alt="{{ product.title }}">
            </div>
            {% endfor %}
        </div>
    </div>
</div>
<div id="product-modal" class="custom_modal" aria-hidden="true" role="dialog" aria-modal="true">
    <div class="modal_dialog" role="document">
      <header class="modal_header">
        <button class="modal_close" aria-label="Close">&times;</button>
      </header>
      <div class="modal_content_popup">
        <div class="modal_image"></div>
        <div class="modal_meta">
          <div class="modal_title"></div>
           <div class="js-modal-price modal_price"></div>
          <p class="js-modal-desc"></p>
        </div>
      </div>
      <div class="modal_meta">         
          <div class="js-modal-options"></div>
        </div>
      <footer class="modal_footer">
        <button class="btn btn--primary js-modal-add">ADD TO CART</button> 
      </footer>
    </div>
<script>
(function () {
  const $$ = (sel, ctx = document) => Array.from(ctx.querySelectorAll(sel));
  const $ = (sel, ctx = document) => ctx.querySelector(sel); 

  let modal, modalDialog, modalCloseBtn, modalTitle, modalImage, modalDesc, modalPrice, customModaloptionsWrap, modalAddBtn;
  let activeProduct = null;          
  let activeVariantId = null;        
  let autoAddJacketHandle = null;    
  let focusTrapEls = [];

  // modal load init function when page load      
  function initModal() {
    modal = $('#product-modal');
    if (!modal) return;
    modalDialog = $('.modal_dialog', modal);
    modalCloseBtn = $('.modal_close', modal);
    modalTitle = $('.modal_title', modal);
    modalImage = $('.modal_image', modal);
    modalDesc = $('.js-modal-desc', modal);
    modalPrice = $('.js-modal-price', modal);
    customModaloptionsWrap = $('.js-modal-options', modal);
    modalAddBtn = $('.js-modal-add', modal);

    modalCloseBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', (e) => { if (e.target === modal) closeModal(); });
    document.add('keydown', (e) => { if (e.key === 'Escape' && modal.classList.contains('modal--open')) closeModal(); });
  } 
  function openModal() {
    modal.classList.add('modal--open');
    // focus trap
    focusTrapEls = $$('a, button, select, input, [tabindex]:not([tabindex="-1"])', modalDialog).filter(el => !el.disabled);
    if (focusTrapEls.length) focusTrapEls[0].focus();
    modal.addEventListener('keydown', trapTab);
  }

  function initProductTiles() {
    $$('.custom-grid').forEach(section => {
      const jacketHandle = section?.dataset?.autoAddJacketHandle || '';
      $$('.custom-product-grid', section).forEach(tile => {
        tile.addEventListener('click', (e) => {
          e.preventDefault();
          const handle = tile.getAttribute('data-handle');
          if (handle) openProductPopupByHandle(handle, jacketHandle);
        });
      });
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    initModal();
    initProductTiles();
  });
 
})();

</script>

{% schema %}
{
    "name": "Product Grid",
    "settings": [
        {
            "type": "text",
            "id": "title",
            "label": "Title"
        },
        {
            "type": "product_list",
            "id": "product",
            "label": "Product List"
        }
    ],
    "presets": [
        {
         "name": "Product Grid"
        }
    ]
}
{% endschema %}
